# Cargar librería
library(GGally)
library(dplyr)
# Variables dinámicas derivadas del SII
vars_SII_dyn <- c(
"SII_slope", "SII_diff_0_1eval", "SII_diff_1C_2C", "SII_diff_0_1C",
"SII_diff_1C_1eval", "SII_diff_2C_1eval", "SII_diff_1eval_2C",
"SII_cv", "SII_media"
)
# Filtrar solo esas columnas (asegúrate de que existen en el objeto 'data')
df_SII_dyn <- data %>% select(all_of(vars_SII_dyn))
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
data <- read.xlsx("datosLimpio.xlsx")
library(openxlsx)
data <- read.xlsx("datosLimpio.xlsx")
# Cargar librería
library(GGally)
library(dplyr)
# Variables dinámicas derivadas del SII
vars_SII_dyn <- c(
"SII_slope", "SII_diff_0_1eval", "SII_diff_1C_2C", "SII_diff_0_1C",
"SII_diff_1C_1eval", "SII_diff_2C_1eval", "SII_diff_1eval_2C",
"SII_cv", "SII_media"
)
# Filtrar solo esas columnas (asegúrate de que existen en el objeto 'data')
df_SII_dyn <- data %>% select(all_of(vars_SII_dyn))
# Cargar librería
library(GGally)
library(dplyr)
vars_biomarcadores <- c(
"Albumin_media", "Albumin_cv", "Albumin_slope", "Albumin_diff_0_1C", "Albumin_diff_1C_2C", "Albumin_diff_2C_1eval", "Albumin_diff_0_1eval",
"Protein_media", "Protein_cv", "Protein_slope", "Protein_diff_0_1C", "Protein_diff_1C_2C", "Protein_diff_2C_1eval", "Protein_diff_0_1eval",
"Hemoglobin_media", "Hemoglobin_cv", "Hemoglobin_slope", "Hemoglobin_diff_0_1C", "Hemoglobin_diff_1C_2C", "Hemoglobin_diff_2C_1eval", "Hemoglobin_diff_0_1eval",
"Leukocytes_media", "Leukocytes_cv", "Leukocytes_slope", "Leukocytes_diff_0_1C", "Leukocytes_diff_1C_2C", "Leukocytes_diff_2C_1eval", "Leukocytes_diff_0_1eval",
"Neutrophils_media", "Neutrophils_cv", "Neutrophils_slope", "Neutrophils_diff_0_1C", "Neutrophils_diff_1C_2C", "Neutrophils_diff_2C_1eval", "Neutrophils_diff_0_1eval",
"Lymphocytes_media", "Lymphocytes_cv", "Lymphocytes_slope", "Lymphocytes_diff_0_1C", "Lymphocytes_diff_1C_2C", "Lymphocytes_diff_2C_1eval", "Lymphocytes_diff_0_1eval",
"Platelets_media", "Platelets_cv", "Platelets_slope", "Platelets_diff_0_1C", "Platelets_diff_1C_2C", "Platelets_diff_2C_1eval", "Platelets_diff_0_1eval",
"NLR_media", "NLR_cv", "NLR_slope", "NLR_diff_0_1C", "NLR_diff_1C_2C", "NLR_diff_2C_1eval", "NLR_diff_0_1eval",
"PLR_media", "PLR_cv", "PLR_slope", "PLR_diff_0_1C", "PLR_diff_1C_2C", "PLR_diff_2C_1eval", "PLR_diff_0_1eval",
"PNI_media", "PNI_cv", "PNI_slope", "PNI_diff_0_1C", "PNI_diff_1C_2C", "PNI_diff_2C_1eval", "PNI_diff_0_1eval",
"SII_media", "SII_cv", "SII_slope", "SII_diff_0_1C", "SII_diff_1C_2C", "SII_diff_2C_1eval", "SII_diff_0_1eval"
)
# Filtrar solo las variables indicadas
df_corr <- data %>% select(all_of(vars_biomarcadores))
# Graficar la matriz de correlación
ggcorr(
df_corr,
label = TRUE,
label_round = 2,
label_size = 3.5,
low = "steelblue", high = "red",
name = "Correlación"
) +
ggtitle("Matriz de correlación entre variables dinámicas de biomarcadores")
source("~/.active-rstudio-document", echo=TRUE)
library(dplyr)
library(GGally)
library(stringr)
# Lista completa de variables que te interesan
vars_biomarcadores <- c(
"Albumin_media", "Albumin_cv", "Albumin_slope", "Albumin_diff_0_1C", "Albumin_diff_1C_2C", "Albumin_diff_2C_1eval", "Albumin_diff_0_1eval",
"Protein_media", "Protein_cv", "Protein_slope", "Protein_diff_0_1C", "Protein_diff_1C_2C", "Protein_diff_2C_1eval", "Protein_diff_0_1eval",
"Hemoglobin_media", "Hemoglobin_cv", "Hemoglobin_slope", "Hemoglobin_diff_0_1C", "Hemoglobin_diff_1C_2C", "Hemoglobin_diff_2C_1eval", "Hemoglobin_diff_0_1eval",
"Leukocytes_media", "Leukocytes_cv", "Leukocytes_slope", "Leukocytes_diff_0_1C", "Leukocytes_diff_1C_2C", "Leukocytes_diff_2C_1eval", "Leukocytes_diff_0_1eval",
"Neutrophils_media", "Neutrophils_cv", "Neutrophils_slope", "Neutrophils_diff_0_1C", "Neutrophils_diff_1C_2C", "Neutrophils_diff_2C_1eval", "Neutrophils_diff_0_1eval",
"Lymphocytes_media", "Lymphocytes_cv", "Lymphocytes_slope", "Lymphocytes_diff_0_1C", "Lymphocytes_diff_1C_2C", "Lymphocytes_diff_2C_1eval", "Lymphocytes_diff_0_1eval",
"Platelets_media", "Platelets_cv", "Platelets_slope", "Platelets_diff_0_1C", "Platelets_diff_1C_2C", "Platelets_diff_2C_1eval", "Platelets_diff_0_1eval",
"NLR_media", "NLR_cv", "NLR_slope", "NLR_diff_0_1C", "NLR_diff_1C_2C", "NLR_diff_2C_1eval", "NLR_diff_0_1eval",
"PLR_media", "PLR_cv", "PLR_slope", "PLR_diff_0_1C", "PLR_diff_1C_2C", "PLR_diff_2C_1eval", "PLR_diff_0_1eval",
"PNI_media", "PNI_cv", "PNI_slope", "PNI_diff_0_1C", "PNI_diff_1C_2C", "PNI_diff_2C_1eval", "PNI_diff_0_1eval",
"SII_media", "SII_cv", "SII_slope", "SII_diff_0_1C", "SII_diff_1C_2C", "SII_diff_2C_1eval", "SII_diff_0_1eval"
)
# Detectar nombres base (biomarcadores únicos)
nombres_base <- unique(str_extract(vars_biomarcadores, "^[^_]+"))
# Bucle para generar una matriz por cada conjunto de variables
for (nombre in nombres_base) {
# Filtrar variables que empiezan con el nombre base
vars_grupo <- vars_biomarcadores[str_detect(vars_biomarcadores, paste0("^", nombre, "_"))]
# Filtrar columnas del dataset
df_temp <- data %>% select(any_of(vars_grupo))
# Saltar si no hay suficientes columnas
if (ncol(df_temp) < 2) next
# Graficar matriz de correlación
print(
ggcorr(df_temp,
label = TRUE,
label_round = 2,
label_size = 3.5,
low = "steelblue", high = "red",
name = "Correlación") +
ggtitle(paste("Matriz de correlación:", nombre))
)
}
library(dplyr)
library(GGally)
library(stringr)
# Lista completa de variables que te interesan
vars_biomarcadores <- c(
"Albumin_media", "Albumin_cv", "Albumin_slope", "Albumin_diff_0_1C", "Albumin_diff_1C_2C", "Albumin_diff_2C_1eval", "Albumin_diff_0_1eval",
"Protein_media", "Protein_cv", "Protein_slope", "Protein_diff_0_1C", "Protein_diff_1C_2C", "Protein_diff_2C_1eval", "Protein_diff_0_1eval",
"Hemoglobin_media", "Hemoglobin_cv", "Hemoglobin_slope", "Hemoglobin_diff_0_1C", "Hemoglobin_diff_1C_2C", "Hemoglobin_diff_2C_1eval", "Hemoglobin_diff_0_1eval",
"Leukocytes_media", "Leukocytes_cv", "Leukocytes_slope", "Leukocytes_diff_0_1C", "Leukocytes_diff_1C_2C", "Leukocytes_diff_2C_1eval", "Leukocytes_diff_0_1eval",
"Neutrophils_media", "Neutrophils_cv", "Neutrophils_slope", "Neutrophils_diff_0_1C", "Neutrophils_diff_1C_2C", "Neutrophils_diff_2C_1eval", "Neutrophils_diff_0_1eval",
"Lymphocytes_media", "Lymphocytes_cv", "Lymphocytes_slope", "Lymphocytes_diff_0_1C", "Lymphocytes_diff_1C_2C", "Lymphocytes_diff_2C_1eval", "Lymphocytes_diff_0_1eval",
"Platelets_media", "Platelets_cv", "Platelets_slope", "Platelets_diff_0_1C", "Platelets_diff_1C_2C", "Platelets_diff_2C_1eval", "Platelets_diff_0_1eval",
"NLR_media", "NLR_cv", "NLR_slope", "NLR_diff_0_1C", "NLR_diff_1C_2C", "NLR_diff_2C_1eval", "NLR_diff_0_1eval",
"PLR_media", "PLR_cv", "PLR_slope", "PLR_diff_0_1C", "PLR_diff_1C_2C", "PLR_diff_2C_1eval", "PLR_diff_0_1eval",
"PNI_media", "PNI_cv", "PNI_slope", "PNI_diff_0_1C", "PNI_diff_1C_2C", "PNI_diff_2C_1eval", "PNI_diff_0_1eval",
"SII_media", "SII_cv", "SII_slope", "SII_diff_0_1C", "SII_diff_1C_2C", "SII_diff_2C_1eval", "SII_diff_0_1eval"
)
# Detectar nombres base (biomarcadores únicos)
nombres_base <- unique(str_extract(vars_biomarcadores, "^[^_]+"))
# Bucle para generar una matriz por cada conjunto de variables
for (nombre in nombres_base) {
# Filtrar variables que empiezan con el nombre base
vars_grupo <- vars_biomarcadores[str_detect(vars_biomarcadores, paste0("^", nombre, "_"))]
# Filtrar columnas del dataset
df_temp <- data %>% select(any_of(vars_grupo))
# Saltar si no hay suficientes columnas
if (ncol(df_temp) < 2) next
# Graficar matriz de correlación
print(
ggcorr(df_temp,
label = TRUE,
label_round = 2,
label_size = 3.5,
low = "steelblue", high = "red",
name = "Correlación") +
ggtitle(paste("Matriz de correlación:", nombre))
)
}
library(openxlsx)
data <- read.xlsx("datosLimpio.xlsx")
library(openxlsx)
data <- read.xlsx("datosLimpio.xlsx")
library(dplyr)
library(GGally)
library(stringr)
# Lista completa de variables que te interesan
vars_biomarcadores <- c(
"Albumin_media", "Albumin_cv", "Albumin_slope", "Albumin_diff_0_1C", "Albumin_diff_1C_2C", "Albumin_diff_2C_1eval", "Albumin_diff_0_1eval",
"Protein_media", "Protein_cv", "Protein_slope", "Protein_diff_0_1C", "Protein_diff_1C_2C", "Protein_diff_2C_1eval", "Protein_diff_0_1eval",
"Hemoglobin_media", "Hemoglobin_cv", "Hemoglobin_slope", "Hemoglobin_diff_0_1C", "Hemoglobin_diff_1C_2C", "Hemoglobin_diff_2C_1eval", "Hemoglobin_diff_0_1eval",
"Leukocytes_media", "Leukocytes_cv", "Leukocytes_slope", "Leukocytes_diff_0_1C", "Leukocytes_diff_1C_2C", "Leukocytes_diff_2C_1eval", "Leukocytes_diff_0_1eval",
"Neutrophils_media", "Neutrophils_cv", "Neutrophils_slope", "Neutrophils_diff_0_1C", "Neutrophils_diff_1C_2C", "Neutrophils_diff_2C_1eval", "Neutrophils_diff_0_1eval",
"Lymphocytes_media", "Lymphocytes_cv", "Lymphocytes_slope", "Lymphocytes_diff_0_1C", "Lymphocytes_diff_1C_2C", "Lymphocytes_diff_2C_1eval", "Lymphocytes_diff_0_1eval",
"Platelets_media", "Platelets_cv", "Platelets_slope", "Platelets_diff_0_1C", "Platelets_diff_1C_2C", "Platelets_diff_2C_1eval", "Platelets_diff_0_1eval",
"NLR_media", "NLR_cv", "NLR_slope", "NLR_diff_0_1C", "NLR_diff_1C_2C", "NLR_diff_2C_1eval", "NLR_diff_0_1eval",
"PLR_media", "PLR_cv", "PLR_slope", "PLR_diff_0_1C", "PLR_diff_1C_2C", "PLR_diff_2C_1eval", "PLR_diff_0_1eval",
"PNI_media", "PNI_cv", "PNI_slope", "PNI_diff_0_1C", "PNI_diff_1C_2C", "PNI_diff_2C_1eval", "PNI_diff_0_1eval",
"SII_media", "SII_cv", "SII_slope", "SII_diff_0_1C", "SII_diff_1C_2C", "SII_diff_2C_1eval", "SII_diff_0_1eval"
)
# Detectar nombres base (biomarcadores únicos)
nombres_base <- unique(str_extract(vars_biomarcadores, "^[^_]+"))
# Bucle para generar una matriz por cada conjunto de variables
for (nombre in nombres_base) {
# Filtrar variables que empiezan con el nombre base
vars_grupo <- vars_biomarcadores[str_detect(vars_biomarcadores, paste0("^", nombre, "_"))]
# Filtrar columnas del dataset
df_temp <- data %>% select(any_of(vars_grupo))
# Saltar si no hay suficientes columnas
if (ncol(df_temp) < 2) next
# Graficar matriz de correlación
print(
ggcorr(df_temp,
label = TRUE,
label_round = 2,
label_size = 3.5,
low = "steelblue", high = "red",
name = "Correlación") +
ggtitle(paste("Matriz de correlación:", nombre))
)
}
# Lista de biomarcadores base
biomarcadores <- c("Albumin", "Protein", "Hemoglobin", "Leukocytes", "Neutrophils",
"Lymphocytes", "Platelets", "NLR", "PLR", "PNI", "SII")
# Inicializar dataframe de resultados
correlaciones <- data.frame(
Variable = character(),
Correlacion = numeric(),
stringsAsFactors = FALSE
)
# Bucle por cada biomarcador
for (var in biomarcadores) {
slope_var <- paste0(var, "_slope")
diff_var  <- paste0(var, "_diff_0_1eval")
# Asegurarse de que ambas columnas existen
if (all(c(slope_var, diff_var) %in% colnames(data))) {
r <- cor(data[[slope_var]], data[[diff_var]], use = "complete.obs")
correlaciones <- rbind(correlaciones, data.frame(
Variable = var,
Correlacion = round(r, 3)
))
}
}
# Ordenar por correlación descendente
correlaciones <- correlaciones[order(-correlaciones$Correlacion), ]
print(correlaciones)
# Lista de biomarcadores base
biomarcadores <- c(
"Albumin_media", "Albumin_cv", "Albumin_slope", "Albumin_diff_0_1C", "Albumin_diff_1C_2C", "Albumin_diff_2C_1eval", "Albumin_diff_0_1eval",
"Protein_media", "Protein_cv", "Protein_slope", "Protein_diff_0_1C", "Protein_diff_1C_2C", "Protein_diff_2C_1eval", "Protein_diff_0_1eval",
"Hemoglobin_media", "Hemoglobin_cv", "Hemoglobin_slope", "Hemoglobin_diff_0_1C", "Hemoglobin_diff_1C_2C", "Hemoglobin_diff_2C_1eval", "Hemoglobin_diff_0_1eval",
"Leukocytes_media", "Leukocytes_cv", "Leukocytes_slope", "Leukocytes_diff_0_1C", "Leukocytes_diff_1C_2C", "Leukocytes_diff_2C_1eval", "Leukocytes_diff_0_1eval",
"Neutrophils_media", "Neutrophils_cv", "Neutrophils_slope", "Neutrophils_diff_0_1C", "Neutrophils_diff_1C_2C", "Neutrophils_diff_2C_1eval", "Neutrophils_diff_0_1eval",
"Lymphocytes_media", "Lymphocytes_cv", "Lymphocytes_slope", "Lymphocytes_diff_0_1C", "Lymphocytes_diff_1C_2C", "Lymphocytes_diff_2C_1eval", "Lymphocytes_diff_0_1eval",
"Platelets_media", "Platelets_cv", "Platelets_slope", "Platelets_diff_0_1C", "Platelets_diff_1C_2C", "Platelets_diff_2C_1eval", "Platelets_diff_0_1eval",
"NLR_media", "NLR_cv", "NLR_slope", "NLR_diff_0_1C", "NLR_diff_1C_2C", "NLR_diff_2C_1eval", "NLR_diff_0_1eval",
"PLR_media", "PLR_cv", "PLR_slope", "PLR_diff_0_1C", "PLR_diff_1C_2C", "PLR_diff_2C_1eval", "PLR_diff_0_1eval",
"PNI_media", "PNI_cv", "PNI_slope", "PNI_diff_0_1C", "PNI_diff_1C_2C", "PNI_diff_2C_1eval", "PNI_diff_0_1eval",
"SII_media", "SII_cv", "SII_slope", "SII_diff_0_1C", "SII_diff_1C_2C", "SII_diff_2C_1eval", "SII_diff_0_1eval"
)
# Inicializar dataframe de resultados
correlaciones <- data.frame(
Variable = character(),
Correlacion = numeric(),
stringsAsFactors = FALSE
)
# Bucle por cada biomarcador
for (var in biomarcadores) {
slope_var <- paste0(var, "_slope")
diff_var  <- paste0(var, "_diff_0_1eval")
# Asegurarse de que ambas columnas existen
if (all(c(slope_var, diff_var) %in% colnames(data))) {
r <- cor(data[[slope_var]], data[[diff_var]], use = "complete.obs")
correlaciones <- rbind(correlaciones, data.frame(
Variable = var,
Correlacion = round(r, 3)
))
}
}
# Ordenar por correlación descendente
correlaciones <- correlaciones[order(-correlaciones$Correlacion), ]
print(correlaciones)
library(dplyr)
library(stringr)
# Lista de variables que quieres analizar (tal como la definiste)
vars_biomarcadores <- c(
"Albumin_media", "Albumin_cv", "Albumin_slope", "Albumin_diff_0_1C", "Albumin_diff_1C_2C", "Albumin_diff_2C_1eval", "Albumin_diff_0_1eval",
"Protein_media", "Protein_cv", "Protein_slope", "Protein_diff_0_1C", "Protein_diff_1C_2C", "Protein_diff_2C_1eval", "Protein_diff_0_1eval",
"Hemoglobin_media", "Hemoglobin_cv", "Hemoglobin_slope", "Hemoglobin_diff_0_1C", "Hemoglobin_diff_1C_2C", "Hemoglobin_diff_2C_1eval", "Hemoglobin_diff_0_1eval",
"Leukocytes_media", "Leukocytes_cv", "Leukocytes_slope", "Leukocytes_diff_0_1C", "Leukocytes_diff_1C_2C", "Leukocytes_diff_2C_1eval", "Leukocytes_diff_0_1eval",
"Neutrophils_media", "Neutrophils_cv", "Neutrophils_slope", "Neutrophils_diff_0_1C", "Neutrophils_diff_1C_2C", "Neutrophils_diff_2C_1eval", "Neutrophils_diff_0_1eval",
"Lymphocytes_media", "Lymphocytes_cv", "Lymphocytes_slope", "Lymphocytes_diff_0_1C", "Lymphocytes_diff_1C_2C", "Lymphocytes_diff_2C_1eval", "Lymphocytes_diff_0_1eval",
"Platelets_media", "Platelets_cv", "Platelets_slope", "Platelets_diff_0_1C", "Platelets_diff_1C_2C", "Platelets_diff_2C_1eval", "Platelets_diff_0_1eval",
"NLR_media", "NLR_cv", "NLR_slope", "NLR_diff_0_1C", "NLR_diff_1C_2C", "NLR_diff_2C_1eval", "NLR_diff_0_1eval",
"PLR_media", "PLR_cv", "PLR_slope", "PLR_diff_0_1C", "PLR_diff_1C_2C", "PLR_diff_2C_1eval", "PLR_diff_0_1eval",
"PNI_media", "PNI_cv", "PNI_slope", "PNI_diff_0_1C", "PNI_diff_1C_2C", "PNI_diff_2C_1eval", "PNI_diff_0_1eval",
"SII_media", "SII_cv", "SII_slope", "SII_diff_0_1C", "SII_diff_1C_2C", "SII_diff_2C_1eval", "SII_diff_0_1eval"
)
# Nombres base (SII, PLR, etc.)
nombres_base <- unique(str_extract(vars_biomarcadores, "^[^_]+"))
# Inicializar tabla de resultados
df_cor <- data.frame(Variable_1 = character(), Variable_2 = character(), Correlacion = numeric(), Grupo = character())
# Bucle por cada grupo de variables
for (nombre in nombres_base) {
vars_grupo <- vars_biomarcadores[str_detect(vars_biomarcadores, paste0("^", nombre, "_"))]
df_temp <- data %>% select(any_of(vars_grupo))
if (ncol(df_temp) >= 2) {
m_corr <- cor(df_temp, use = "complete.obs")
m_corr[lower.tri(m_corr, diag = TRUE)] <- NA  # Solo superior
df_melt <- as.data.frame(as.table(m_corr)) %>%
filter(!is.na(Freq)) %>%
rename(Variable_1 = Var1, Variable_2 = Var2, Correlacion = Freq) %>%
mutate(Grupo = nombre)
df_cor <- bind_rows(df_cor, df_melt)
}
}
# Resultado ordenado
df_cor <- df_cor %>% arrange(desc(abs(Correlacion)))
print(df_cor)
library(writexl)
# Exportar el dataframe a un archivo Excel
write_xlsx(df_cor, path = "correlaciones_biomarcadores.xlsx")
library(openxlsx)
library(FactoMineR)
library(factoextra)
library(knitr)
library(dplyr)
library(grid)
library(gridExtra)
library(tibble)
library(ggplot2)
library(ggcorrplot)
library(fastDummies)
library(patchwork)  # asegúrate de tenerlo instalado
library(ggpubr)
library(openxlsx)
library(FactoMineR)
library(factoextra)
library(knitr)
library(dplyr)
library(grid)
library(gridExtra)
library(tibble)
library(ggplot2)
library(ggcorrplot)
library(fastDummies)
library(patchwork)  # asegúrate de tenerlo instalado
library(ggpubr)
datos <- read.xlsx("datosLimpio.xlsx")
# Vector con los nombres de las variables a eliminar
vars_a_eliminar <- c(
"NLR_diff_0_1eval", "PLR_diff_0_1eval", "SII_diff_0_1eval", "Hemoglobin_diff_0_1eval",
"Neutrophils_diff_0_1eval", "Leukocytes_diff_0_1eval", "Lymphocytes_diff_0_1eval",
"Protein_diff_0_1eval", "Albumin_diff_0_1eval", "PNI_diff_0_1eval", "NLR_diff_0_1C",
"Platelets_diff_0_1eval", "SII_diff_0_1C", "PLR_diff_0_1C", "Lymphocytes_diff_0_1C",
"Neutrophils_diff_0_1C", "PNI_diff_1C_2C", "Hemoglobin_diff_1C_2C",
"Albumin_diff_2C_1eval", "Platelets_diff_1C_2C", "Leukocytes_diff_0_1C"
)
# Eliminar esas columnas del dataframe
datos <- datos[, !(names(datos) %in% vars_a_eliminar)]
tipos <- c(
"categorical", # Sex
"numerical",   # Age_at_diagnosis
"categorical", # Elderly
"categorical", # ECOG
"numerical",   # BMI
"numerical",   # %_weight_loss
"categorical", # Smoking_habit
"numerical",   # Smoking_exposure
"categorical", # Diabetes
"categorical", # Cardiopathy
"categorical", # Neurodegenerative
"categorical", # Histology (parece que había un pequeño error en el nombre: Histológicasgy)
"categorical", # Stage
"numerical",   # PD_L1
"categorical", # Statins
"numerical",   # Total_COreltoeo
"numerical",   # LDH
"numerical",   # PCR
"numerical",   # ALI_pre
"categorical", # X1º_eval
"categorical", # Mejor_resp
rep("numerical", 49)
)
# 2. Validar número de columnas
if(length(tipos) != ncol(datos)) {
stop("El número de tipos no coincide con el número de columnas en 'datos'")
}
library(openxlsx)
library(FactoMineR)
library(factoextra)
library(knitr)
library(dplyr)
library(grid)
library(gridExtra)
library(tibble)
library(ggplot2)
library(ggcorrplot)
library(fastDummies)
library(patchwork)  # asegúrate de tenerlo instalado
library(ggpubr)
